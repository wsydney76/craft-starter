{% set entry = context['entry'] %}
{% set isCurrent = context['isCurrent'] %}
{% set isDraft = context['isDraft'] %}

{% set editable = entry.isEditable ? 'editable' : 'noteditable' %}

{# Check if draft warning is set as UI element #}
{% set hasDraftWarningElement = false %}


{% for element in entry.fieldLayout.tabs[0].elements %}
    {% if element is instance of('modules\\drafts\\fieldlayoutelements\\DraftWarning') %}
        {% set hasDraftWarningElement = true %}
    {% endif %}
{% endfor %}



{# Show existing drafts --------------------------------------------------------------------- #}

{% if (not hasDraftWarningElement) and  (isCurrent or isDraft)  %}

    {% set query = craft.entries.draftOf(entry.sourceId).site('*').unique().preferSites([entry.site.handle]) %}

    {% if isDraft %}
        {% set query = query.id("not #{entry.id}") %}
    {% endif %}

    {% set drafts = query.all %}
    {% if drafts %}

        {% set textOne = 'msg_draftwarningone'|t('drafts') %}
        {% set textMultiple = 'msg_draftwarningmultiple'|t('drafts') %}

        <div id="drafts-warning" class="meta read-only warning">
            <p>{{ 'msg_draftwarning'|t('drafts') }} {{ drafts|length == 1 ? textOne : textMultiple }}</p>
            <div class="flex flex-wrap">
                {% for draft in drafts %}
                    {{ tag('a', {
                        class: ['btn'],
                        title: draft.draftName,
                        style: 'max-width:300px;overflow:hidden;text-overflow: ellipsis;',
                        href:"#{ draft.cpEditUrl }&draftId=#{ draft.draftId }",
                        text: 'Edit'|t('drafts') ~ ': ' ~ draft.draftName,
                    }) }}
                {% endfor %}
            </div>
        </div>

    {% endif %}
{% endif %}


{% js %}
if (window.draftEditor) {
    window.draftEditor.on('createDraft', function() {
        $('#draft-name').html(window.draftEditor.settings.draftName);
        $('#draft-new').css('display', '');
        $('#draft-saved').css('display', '');
        $('#current-edit').css('display', 'none');
        Craft.cp.displayNotice($('#draft-new').html());

        if (window.draftEditor.isPreviewActive()) {
            $('.lp-editor-container header').append('<div><b>' + $('#draft-name').html() + '</b></div>');
            }
        });

    }
{% endjs %}

{#
{% js %}
if (window.draftEditor) {
    window.draftEditor.on('createDraft', function() {
        if (window.draftEditor.isPreviewActive()) {
            var draftName = window.draftEditor.settings.draftName;
            Craft.cp.displayNotice('A new preview draft ' + draftName + ' was created for your preview edits');
            $('.lp-editor-container header').append('<div style="margin-top:6px;"><b>New draft for preview edits: ' + draftName + '</b></div>');
        }
    });

}
{% endjs %}
#}
{# Current entry: show hint if multi-site #}
{% if isCurrent and craft.app.sites.allSiteIds|length > 1 %}
    <div class="meta read-only warning" id="current-edit">
        {{ 'msg_editcurrent'|t('drafts') }}
    </div>
{% endif %}

<div class="meta read-only warning" id="draft-new" style="display:none">
    {{ 'msg_newdraft'|t('drafts') }}: <b><span id="draft-name"></span></b>
</div>

{% if craft.app.config.general.autosaveDrafts %}
    <div class="meta read-only warning" id="draft-saved" style="display: none">
        {{ "msg_editsaved_#{editable}"|t('drafts') }}
    </div>
{% endif %}
